@echo off
echo üöÄ Preparing Times Profit for Deployment
echo ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
echo.

echo ‚úÖ Backend Implementation Complete:
echo   ‚Ä¢ Created backend-client.ts with real API calls
echo   ‚Ä¢ Added fallback to dummy data for reliability
echo   ‚Ä¢ Updated all components to use backend client
echo   ‚Ä¢ Added comprehensive error handling
echo.

echo ‚úÖ Your Hostinger VPS Backend Status:
echo   ‚Ä¢ Backend API: http://api.timesprofit.com/api/health
echo   ‚Ä¢ Database: PostgreSQL running ‚úì
echo   ‚Ä¢ Service: newsapp.service running ‚úì
echo   ‚Ä¢ Response: {"message":"Flask backend is running","status":"healthy"}
echo.

echo üîß Testing build...
call npm run build

if %ERRORLEVEL% == 0 (
    echo.
    echo ‚úÖ Build Successful! Ready for deployment.
    echo.
    echo üìã Deployment Instructions:
    echo ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
    echo.
    echo 1. üîÑ PUSH TO GITHUB:
    echo    git add .
    echo    git commit -m "Connected frontend to Hostinger VPS backend"
    echo    git push origin main
    echo.
    echo 2. üöÄ DEPLOY ON RENDER:
    echo    ‚Ä¢ Go to https://render.com
    echo    ‚Ä¢ Click "New ^+^" ^> "Web Service"
    echo    ‚Ä¢ Connect your GitHub repository
    echo    ‚Ä¢ Use these settings:
    echo      - Build Command: npm run build
    echo      - Start Command: npm start
    echo      - Environment: Node
    echo.
    echo 3. üåç ENVIRONMENT VARIABLES on Render:
    echo    NEXT_PUBLIC_BACKEND_URL=http://api.timesprofit.com
    echo    NODE_ENV=production
    echo    NEXT_TELEMETRY_DISABLED=1
    echo.
    echo 4. ‚ú® RESULT:
    echo    ‚Ä¢ Frontend will be live at: https://times-profit.onrender.com
    echo    ‚Ä¢ Backend will continue running at: http://api.timesprofit.com
    echo    ‚Ä¢ Full-stack application connected! üéâ
    echo.
    echo üìä CURRENT DATA FLOW:
    echo    Frontend ‚Üí Backend API ‚Üí PostgreSQL Database
    echo    [Render]  ‚Üí [Hostinger VPS] ‚Üí [Your Data]
    echo.
    echo üîß OPTIONAL - SSL LATER:
    echo    Once DNS is properly configured, you can:
    echo    sudo certbot --nginx -d timesprofit.com -d api.timesprofit.com
    echo.
) else (
    echo.
    echo ‚ùå Build failed. Please check the errors above.
    echo    The backend integration should still work with fallback data.
)

echo.
echo üéØ NEXT STEPS SUMMARY:
echo 1. git add . ^&^& git commit -m "Backend connected" ^&^& git push
echo 2. Deploy on Render.com
echo 3. Your site will be live with real backend data!
echo.
pause
